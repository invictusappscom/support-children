{"version":3,"sources":["getWeb3.js","util.js","Header.js","TokenSelector.js","uniswap.js","Campaign.js","Modal.js","CreateCampaign.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","ethDisplay","price","getCookie","name","parts","document","cookie","split","length","pop","shift","Header","props","button","this","isLogged","localStorage","getItem","id","onClick","logout","handlePress","loginRegister","className","Component","TokenSelector","state","activToken","tokens","handleTokenClick","token","setToken","setState","cssClass","map","i","key","ApolloClient","link","HttpLink","uri","fetchOptions","mode","cache","InMemoryCache","gql","Uniswap","Campaign","donationClick","isDonationInProgress","unisvapProgress","donationFinish","ethAmount","donation","campaign","email","paymantInProgress","loaderText","ethAmountError","donationCancel","onInputchange","event","target","value","data","query","address","toLowerCase","targetCurrency","axios","post","headers","then","response","pairs","Array","isArray","calculateValue","token1Price","e","refreshPage","removingInProgress","removeCampaign","tokenIn","uniswapReturn","owner","accounts","indexOf","creatorAddress","progress","currentAmount","targetAmount","progressText","color","index","cover","image","reload","campaignToken","renderDonate","renderBody","currencyClass","input","size","flag","Math","round","description","substring","type","onChange","disabled","placeholder","active","parseInt","uniswapElement","style","backgroundImage","backgroundColor","left","width","Modal","closeModal","CreateCampaign","beneficiaryAddress","errorName","errorEmail","errorTarget","errorBeneficiaryAddress","imageUrl","endDate","Date","saveCampaignHandle","error","createCampaign","tokenAddress","setEndDate","date","selected","App","storageValue","contract","list","isModal","isCreateCampaign","isLoginRegister","tokenOut","componentDidMount","_child","React","createRef","eth","getAccounts","net","getId","networkId","deployedNetwork","SupportChildrenContract","networks","instance","Contract","abi","events","DonationMade","refreshList","CampaignFinished","CampaignCreated","pullList","alert","methods","getCampaigns","call","handleModalClick","handleCloseModal","handleCreateCampaign","getTime","utils","toWei","send","from","current","handleDonation","userData","info","donateEthToEthCampaign","endCampaign","payload","personal","sign","signature","check","btoa","c","url","status","setItem","axiosConfig","withCredentials","modal","ref","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.78e9bc24.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nexport const getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable()\n          // Accounts now exposed\n          resolve(web3)\n        } catch (error) {\n          reject(error)\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\")\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\")\n        resolve(web3)\n      }\n    })\n  })","export const ethDisplay = (price) => {\n    price = price / 1000000000000000000\n    return price\n}\n\nexport const trimText = (input, size) => {\n    if (input.length > size) {\n        return input.substring(0, size) + '...';\n    }\n    return input;\n}\n\nexport const getCookie = (name) => {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n}","import React, { Component } from \"react\";\n\nimport \"./Header.css\";\nimport { ethDisplay, trimText } from './util'\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let button\n    if (this.props.isLogged || window.localStorage.getItem('logedIn') == 'true') {\n      button = <><div id=\"loginRegister\" onClick={this.props.logout}>Logout</div><div id=\"addCampaign\" onClick={this.props.handlePress}>Add Campaign</div></>\n    } else {\n      button = <><div id=\"loginRegister\" onClick={this.props.loginRegister}>Login / Register</div><div id=\"addCampaign\" onClick={this.props.handlePress}>Add Campaign</div></>\n    }\n    return (\n      <header>\n        <div className=\"wrapper\">\n          <div className=\"logo\"></div>\n          {button}\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nimport \"./TokenSelector.css\";\n\nclass TokenSelector extends Component {\n    state = {\n        activToken: this.props.tokens[0],\n    }\n    constructor(props) {\n        super(props)\n    }\n    handleTokenClick = (token) => {\n        // console.log('tokens:', data.name)\n        this.props.setToken(token)\n        this.setState({\n            activToken: token\n        })\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"selectField\">\n                    <div>{this.state.activToken.name}<div className={`tokenImg ${this.state.activToken.cssClass}`}></div></div>\n                    <ul>\n                        {this.props.tokens.map((token, i) => {\n                            return <li onClick={() => { this.handleTokenClick(token) }} key={i}>{token.name}<div className={`tokenImg ${token.cssClass}`}></div></li>\n                        })}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TokenSelector;\n","import React, { useEffect } from 'react'\nimport { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\n// import uniswapLogo from '../uniswap-logo.png'\n// import daiLogo from '../dai-logo.png'\n\nexport const client = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2'\n  }),\n  fetchOptions: {\n    mode: 'no-cors'\n  },\n  cache: new InMemoryCache()\n})\n\nconst DAI_QUERY = gql`\n  query tokens($tokenAddress: Bytes!) {\n    tokens(where: { id: $tokenAddress }) {\n      derivedETH\n      totalLiquidity\n    }\n  }\n`\n\nconst ETH_PRICE_QUERY = gql`\n  query bundles {\n    bundles(where: { id: \"1\" }) {\n      ethPrice\n    }\n  }\n`\n\nfunction Uniswap(props) {\n  console.log('Uniswap', props.tokenIn)\n  let address = '0x6b175474e89094c44da98b954eedeac495271d0f'\n  if (typeof props.tokenIn !== 'undefined') {\n    address = props.tokenIn.address\n  }\n  const { loading: ethLoading, data: ethPriceData } = useQuery(ETH_PRICE_QUERY)\n  const { loading: daiLoading, data: daiData } = useQuery(DAI_QUERY, {\n    variables: {\n      tokenAddress: address\n      // tokenAddress: this.props.tokenIn.address\n    }\n  })\n\n  const daiPriceInEth = daiData && daiData.tokens[0].derivedETH\n  const daiTotalLiquidity = daiData && daiData.tokens[0].totalLiquidity\n  const ethPriceInUSD = ethPriceData && ethPriceData.bundles[0].ethPrice\n\n  if (daiPriceInEth && ethPriceInUSD) props.uniswapReturn({\n    dai: daiPriceInEth,\n    eth: ethPriceInUSD\n  })\n\n  return (\n    <></>\n  );\n}\n\nexport default Uniswap","import React, { Component } from \"react\";\n\nimport TokenSelector from \"./TokenSelector\"\nimport \"./Campaign.css\";\nimport { ethDisplay, trimText } from './util'\n\nimport Uniswap from './uniswap';\nimport { client } from './uniswap'\nimport { ApolloProvider } from 'react-apollo'\nimport axios from \"axios\"\n\nclass Campaign extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let colorArray = ['#00baa3', '#efc94c', '#d55342', '#2780ba']\n\n    console.log(\"Campaign\", props.campaign)\n    // console.log(\"Accounts\", props.accounts)\n    let owner = false\n    if (props.accounts.indexOf(props.campaign.creatorAddress) !== -1) owner = true\n    // console.log(\"Index\", props.index)\n    let progress = (props.campaign.currentAmount / props.campaign.targetAmount) * 100\n    let progressText = progress\n    if (progress > 100) progress = 100\n    // console.log('progress', progress)\n    let color = colorArray[props.index % 4]\n    let cover = 'cause-' + this.props.index % 7 + '.jpg'\n    if (props.campaign.image) cover = props.campaign.image\n    this.state = {\n      reload: false,\n      ethAmount: 0,\n      ethAmountError: false,\n      email: '',\n      campaign: null,\n      progress: progress,\n      progressText: progressText,\n      color: color,\n      isDonationInProgress: false,\n      cover: cover,\n      paymantInProgress: false,\n      removingInProgress: false,\n      owner: owner,\n      loaderText: '',\n      token: this.props.tokens[0],\n      campaignToken: this.props.tokens[0],\n      unisvapProgress: false,\n    }\n  }\n\n  donationClick = () => {\n    // this.props.donation(this.props.campaign)\n    this.setState({\n      isDonationInProgress: true,\n      unisvapProgress: true\n    })\n  }\n  donationFinish = () => {\n    if (this.state.ethAmount > 0) {\n      this.props.donation(this.props.campaign, {\n        email: this.state.email,\n        ethAmount: this.state.ethAmount,\n        token: this.state.token\n      })\n      this.setState({\n        isDonationInProgress: false,\n        paymantInProgress: true,\n        loaderText: 'Paymant In Progress'\n      })\n    } else {\n      this.setState({\n        ethAmountError: true\n      })\n    }\n  }\n  donationCancel = () => {\n    this.setState({ isDonationInProgress: false })\n  }\n  onInputchange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n    let url = 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2'\n    let data = { query: \"{ pairs(where: { token0: \\\"\" + this.state.token.address.toLowerCase() + \"\\\" token1: \\\"\" + this.props.campaign.targetCurrency.toLowerCase() + \"\\\" }) { token0Price token1Price }}\" }\n    let axiosConfig = {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }\n    axios\n      .post(url, data, axiosConfig)\n      .then((response) => {\n        console.log('uniswap response', response.data.data.pairs)\n        if (Array.isArray(response.data.data.pairs)) {\n          try {\n            let calculateValue = response.data.data.pairs[0].token1Price * this.state.ethAmount\n            this.setState({\n              calculateValue: calculateValue\n            })\n          } catch (e) { }\n        }\n      })\n\n  }\n  refreshPage = () => {\n    this.setState(\n      {\n        paymantInProgress: false,\n        removingInProgress: false\n      }\n    )\n  }\n  removeCampaign = () => {\n    this.props.removeCampaign(this.props.campaign.id)\n    this.setState(\n      {\n        removingInProgress: true,\n        loaderText: 'Deactivate In Progress'\n      }\n    )\n  }\n  setToken = (token) => {\n    console.log('Set Token', token)\n    console.log(token, this.props.campaign.targetCurrency)\n    let url = 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2'\n    let data = { query: \"{ pairs(where: { token0: \\\"\" + token.address.toLowerCase() + \"\\\" token1: \\\"\" + this.props.campaign.targetCurrency.toLowerCase() + \"\\\" }) { token0Price token1Price }}\" }\n    let axiosConfig = {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }\n    if (token.address.toLowerCase() === this.props.campaign.targetCurrency.toLowerCase()) {\n      this.setState({\n        calculateValue: this.state.ethAmount\n      })\n    } else {\n      axios\n        .post(url, data, axiosConfig)\n        .then((response) => {\n          console.log('uniswap response', response.data.data.pairs)\n          if (Array.isArray(response.data.data.pairs)) {\n            try {\n              let calculateValue = response.data.data.pairs[0].token1Price * this.state.ethAmount\n              this.setState({\n                calculateValue: calculateValue\n              })\n            } catch (e) { }\n          }\n        })\n    }\n\n    this.setState({\n      token: token,\n      // unisvapProgress: true,\n      tokenIn: token\n    })\n  }\n\n  uniswapReturn = (data) => {\n    console.log(data)\n    this.setState({\n      unisvapProgress: false\n    })\n\n  }\n\n  render() {\n    let renderDonate, renderBody, uniswapElement\n\n    // if (this.state.unisvapProgress) {\n    //   uniswapElement = <ApolloProvider client={client}><Uniswap tokenIn={this.state.tokenIn} tokenOut={this.state.tokenOut} uniswapReturn={this.uniswapReturn} /></ApolloProvider>\n    // } else {\n    //   uniswapElement = <></>\n    // }\n\n    let currencyClass = 'tokenEth'\n    this.props.tokens.map((token) => {\n      // console.log(token.address, this.props.campaign.targetCurrency, token.cssClass)\n      if (token.address.toLowerCase() === this.props.campaign.targetCurrency.toLowerCase()) {\n        currencyClass = token.cssClass\n      }\n    })\n\n\n    let progress = Math.round((this.props.campaign.currentAmount / this.props.campaign.targetAmount) * 100)\n    let progressText = progress\n    if (progress > 100) progress = 100\n\n    renderBody = <div className=\"campaignDescription\">{trimText(this.props.campaign.description, 100)}</div>\n    if (this.state.isDonationInProgress) {\n      renderBody = <div>\n        <div className=\"flexRow\">\n          {/* <div className=\"col3\"><strong>Donate: </strong></div> */}\n          <div className=\"col8\">\n\n            <input type=\"number\" className={`donateInput ethValue ${this.state.ethAmountError ? \"error\" : \"\"}`}\n              name=\"ethAmount\"\n              value={this.state.ethAmount}\n              onChange={this.onInputchange}\n            />\n          </div>\n          <div className=\"col4\">\n            <TokenSelector tokens={this.props.tokens} setToken={this.setToken} />\n          </div>\n        </div>\n        <div className=\"flexRow\">\n          <div className=\"col10\">\n            <input type=\"number\" className={`donateInput ethValue`}\n              name=\"calculateValue\"\n              value={this.state.calculateValue}\n              disabled\n            />\n          </div>\n          <div className=\"col2\">\n            <div className={`tokenImg ${currencyClass}`}></div>\n          </div>\n        </div>\n        <input type=\"text\" className=\"donateInput\"\n          placeholder=\"email\"\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onInputchange}\n        />\n      </div>\n      renderDonate = <div className=\"donateBtnWrapper\">\n        <div className=\"donateFinish\" onClick={this.donationFinish}>Send Donation</div>\n        <div className=\"donateCancel\" onClick={this.donationCancel}>Cancel</div>\n      </div>\n    } else if (this.props.campaign.active) {\n      renderDonate = <div className=\"donateBtn\" onClick={this.donationClick}>Donate Now</div>\n    }\n\n    if (this.props.campaign) {\n      let flag\n      if (parseInt(this.props.campaign.currentAmount) >= parseInt(this.props.campaign.targetAmount)) {\n        flag = <div className=\"finished\">Campaign Successful</div>\n      } else {\n        flag = <div className=\"finished\">Campaign Inactive</div>\n      }\n      return (\n        <div className=\"campaignWrapper\">\n          {uniswapElement}\n          <div className={`campaign ${this.props.campaign.active ? \"active\" : \"inactive\"} ${this.state.removingInProgress ? \"loading\" : \"\"} ${this.state.paymantInProgress ? \"loading\" : \"\"} ${this.state.owner ? \"owner\" : \"\"} `}>\n            <div className=\"removeCampaing\" onClick={this.removeCampaign}></div>\n            {flag}\n            <div className=\"campaignPhoto\" style={{\n              backgroundImage: `url(\"${this.state.cover}\")`\n            }}\n              onClick={this.refreshPage}\n            >\n              <h2 className=\"campaignName\" style={{ backgroundColor: this.state.color }}>{this.props.campaign.name}</h2>\n            </div>\n            <div className=\"campaignBody\">\n              <div className=\"loader\"><span>{this.state.loaderText}</span></div>\n              {renderBody}\n              {renderDonate}\n              <div className=\"campaignGoalWrapper\"><div className=\"campaignGoalProgress\"><div className=\"campaignProgressText\" style={{ left: progress + \"%\", backgroundColor: this.state.color }} ><strong>{progressText}%</strong></div><div className=\"campaignProgress\" style={{ width: progress + '%', backgroundColor: this.state.color }}></div></div></div>\n              <div className=\"campaignRaised\"><strong>Raised:</strong> {ethDisplay(this.props.campaign.currentAmount)}<div className={`tokenImg ${currencyClass}`}></div></div>\n              <div className=\"campaignGoal\"><strong>Goal:</strong> {ethDisplay(this.props.campaign.targetAmount)}<div className={`tokenImg ${currencyClass}`}></div></div>\n            </div>\n\n          </div>\n        </div>\n      )\n    } else {\n      return (<div></div>)\n    }\n  }\n}\n\nexport default Campaign;\n","import React, { Component } from \"react\";\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  closeModal = () => {\n    this.props.closeModal()\n  }\n\n  render() {\n    return (\n      <div id=\"modalDim\" onClick={this.closeModal}></div>\n    )\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\"\n\nimport \"./CreateCamapign.css\";\nimport TokenSelector from \"./TokenSelector\"\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nclass CreateCampaign extends Component {\n    state = {\n        name: '',\n        description: '',\n        email: '',\n        beneficiaryAddress: '',\n        targetAmount: 0,\n        errorName: false,\n        errorEmail: false,\n        errorTarget: false,\n        errorBeneficiaryAddress: false,\n        imageUrl: '',\n        token: this.props.tokens[0],\n        endDate: new Date(),\n    }\n    constructor(props) {\n        super(props)\n    }\n    onInputchange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    saveCampaignHandle = () => {\n        let error = false\n        if (this.state.name == '') {\n            this.setState({ errorName: true })\n            error = true\n        }\n        if (this.state.email == '') {\n            this.setState({ errorEmail: true })\n            error = true\n        }\n        if (this.state.targetAmount <= 0) {\n            this.setState({ errorTarget: true })\n            error = true\n        }\n        if (this.state.beneficiaryAddress == '') {\n            this.setState({ errorBeneficiaryAddress: true })\n            error = true\n        }\n        if (!error) {\n            this.props.createCampaign({\n                name: this.state.name,\n                email: this.state.email,\n                description: this.state.description,\n                targetAmount: this.state.targetAmount,\n                imageUrl: this.state.imageUrl,\n                endDate: this.state.endDate,\n                tokenAddress: this.state.token.address,\n                beneficiaryAddress: this.state.beneficiaryAddress,\n            })\n        }\n    }\n    closeModal = () => {\n        this.props.closeModal()\n    }\n    setToken = (token) => {\n        console.log('Set Token', token)\n        this.setState({\n            token: token\n        })\n    }\n    setEndDate = (date) => {\n        this.setState({\n            endDate: date\n        })\n    }\n    render() {\n        return (\n            <div id=\"createCamapignWrapper\">\n                <div className=\"createCamapignBg\"></div>\n                <div className=\"createCamapignBody\">\n                    <h3>Create Campaign</h3>\n                    <div className=\"flexRow\">\n                        <div className=\"col6\">\n                            <input type=\"text\" placeholder=\"Campaign Name\" className={`${this.state.errorName ? \"error\" : \"\"}`}\n                                name=\"name\"\n                                value={this.state.name}\n                                onChange={this.onInputchange}\n                            />\n                        </div>\n                        <div className=\"col3 ethCell\">\n                            <input type=\"number\" placeholder=\"Target Amount\" className={`${this.state.errorTarget ? \"error\" : \"\"}`}\n                                name=\"targetAmount\"\n                                value={this.state.targetAmount}\n                                onChange={this.onInputchange}\n                            />\n                        </div>\n                        <div className=\"col3 ethCell\">\n                            <TokenSelector tokens={this.props.tokens} setToken={this.setToken} />\n                        </div>\n                    </div>\n                    <input type=\"text\" placeholder=\"Beneficiary Address\" className={`${this.state.errorBeneficiaryAddress ? \"error\" : \"\"}`}\n                        name=\"beneficiaryAddress\"\n                        value={this.state.beneficiaryAddress}\n                        onChange={this.onInputchange}\n                    />\n                    <textarea placeholder=\"Description\"\n                        name=\"description\"\n                        value={this.state.description}\n                        onChange={this.onInputchange}\n                    ></textarea>\n                    <input type=\"text\" placeholder=\"Email\" className={`${this.state.errorEmail ? \"error\" : \"\"}`}\n                        name=\"email\"\n                        value={this.state.email}\n                        onChange={this.onInputchange}\n                    />\n                    <div className=\"flexRow\">\n                        <div className=\"col6\">\n                            <input type=\"text\" placeholder=\"Image URL\"\n                                name=\"imageUrl\"\n                                value={this.state.imageUrl}\n                                onChange={this.onInputchange}\n                            />\n                        </div>\n                        <div className=\"col6\">\n                            <span>Valid till: </span>\n                            <DatePicker selected={this.state.endDate}\n                                onChange={(date) => this.setEndDate(date)}\n                            />\n                        </div>\n                    </div>\n                    <div id=\"createCampaignSave\" onClick={this.saveCampaignHandle}>Create Campaign</div>\n                    <div id=\"createCampaignCancel\" onClick={this.closeModal}>Cancel</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateCampaign;\n","import React, { Component } from \"react\";\nimport SupportChildrenContract from \"./contracts/SupportChildren.json\";\nimport { getWeb3 } from \"./getWeb3\";\n\nimport Header from \"./Header\";\nimport Campaign from \"./Campaign\";\nimport Modal from \"./Modal\";\nimport CreateCampaign from \"./CreateCampaign\";\n\nimport { getCookie } from './util'\n\n// import { ApolloProvider } from 'react-apollo'\n\nimport ReactNotification from 'react-notifications-component'\nimport { store } from 'react-notifications-component';\n\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'animate.css/animate.min.css'\nimport 'react-notifications-component/dist/theme.css'\n\n// import Uniswap from './uniswap';\n// import { client } from './uniswap'\n\nimport axios from \"axios\"\n\nclass App extends Component {\n  state = {\n    storageValue: 0,\n    web3: null,\n    accounts: null,\n    contract: null,\n    list: [],\n    isModal: false,\n    isCreateCampaign: false,\n    isLoginRegister: false,\n    tokenIn: null,\n    tokenOut: null,\n    isLogged: false,\n    tokens: [\n      {\n        name: 'ETH',\n        address: 'EHT',\n        cssClass: 'tokenEth'\n      },\n      {\n        name: 'DAI',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        cssClass: 'tokenDai'\n      },\n      {\n        name: 'WETH',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        cssClass: 'tokenWeth'\n      },\n      {\n        name: 'OMG',\n        address: '0xd26114cd6ee289accf82350c8d8487fedb8a0c07',\n        cssClass: 'tokenOmg'\n      },\n    ]\n\n  };\n  componentDidMount = async () => {\n    this._child = React.createRef();\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SupportChildrenContract.networks[networkId]\n      const instance = new web3.eth.Contract(\n        SupportChildrenContract.abi,\n        deployedNetwork && deployedNetwork.address\n      )\n\n      let tokens = this.state.tokens\n      tokens[0].address = deployedNetwork.address\n\n      this.setState({\n        tokens: tokens\n      })\n\n      instance.events.DonationMade({}, async (error, data) => {\n        // console.log('DonationMade')\n        if (error) {\n          return console.log('Error: ' + error)\n        }\n        this.refreshList()\n      })\n\n      instance.events.CampaignFinished({}, async (error, data) => {\n        // console.log('CampaignFinished')\n        if (error) {\n          return console.log('Error: ' + error)\n        }\n        this.refreshList()\n      })\n\n      instance.events.CampaignCreated({}, async (error, data) => {\n        // console.log('CampaignCreated')\n        this.refreshList()\n      })\n\n\n      this.setState({ web3, accounts, contract: instance }, this.pullList);\n\n\n      // console.log(instance);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  pullList = async () => {\n    const { accounts, contract } = this.state;\n    let list = await contract.methods.getCampaigns().call()\n    // console.log(list)\n\n    this.setState({\n      list: list\n    })\n  }\n\n  handlePress = async () => {\n    this.setState({\n      isModal: true,\n      isCreateCampaign: true\n    })\n  }\n  handleModalClick = () => {\n    this.handleCloseModal()\n  }\n  handleCreateCampaign = async (data) => {\n    const { accounts, contract } = this.state;\n    console.log('Create campaign', data)\n    // console.info({\n    //   name: data.name,\n    //   desc: data.description,\n    //   email: data.email,\n    //   image: data.imageUrl,\n    //   endTime: Math.round(new Date(data.endDate).getTime() / 1000),\n    //   tokenIndex: 1,\n    //   amount: this.state.web3.utils.toWei(data.targetAmount, 'ether'),\n    //   address: data.beneficiaryAddress\n    // })\n\n    this.handleCloseModal()\n    try {\n      await contract.methods.createCampaign(data.name, data.description, data.email, data.imageUrl, Math.round(new Date(data.endDate).getTime() / 1000), data.tokenAddress, this.state.web3.utils.toWei(data.targetAmount, 'ether'), data.beneficiaryAddress).send({ from: accounts[0] })\n    } catch (e) {\n      this.refreshList()\n    }\n  }\n  handleCloseModal = () => {\n    this.setState({\n      isModal: false,\n      isCreateCampaign: false\n    })\n  }\n  refreshList = () => {\n    try {\n      this._child.current.refreshPage()\n      this.pullList()\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  handleDonation = async (data, userData) => {\n    const { accounts, contract } = this.state;\n    console.log('Donation', data, userData, accounts[0])\n    if (data.targetCurrency === this.state.tokens[0].address && userData.token.address === this.state.tokens[0].address) {\n      console.log('ETH 2 ETH')\n      console.info(data.id, userData.email, accounts[0], this.state.web3.utils.toWei(userData.ethAmount, 'ether'))\n      await contract.methods.donateEthToEthCampaign(data.id, userData.email).send({ from: accounts[0], value: this.state.web3.utils.toWei(userData.ethAmount, 'ether') })\n    } else if (data.targetCurrency === this.state.tokens[0].address) {\n      console.log('TOKEN 2 ETH')\n    } else if (userData.token.address === this.state.tokens[0].address) {\n      console.log('ETH 2 TOKEN')\n    } else {\n      console.log('TOKEN 2 TOKEN')\n    }\n    return\n    // donateEthToEthCampaign\n    // donateEthToTokenCampaign\n    // donateTokenToETHCampaign\n    // donateTokenToTokenCampaign\n    try {\n      await contract.methods.donate(data.id, userData.email).send({ from: accounts[0], value: this.state.web3.utils.toWei(userData.ethAmount, 'ether') })\n    } catch (e) {\n      this._child.current.refreshPage()\n      this.pullList()\n    }\n  }\n  removeCampaign = async (id) => {\n    // console.log('removeCampaign', id)\n    const { accounts, contract } = this.state;\n    try {\n      await contract.methods.endCampaign(id).send({ from: accounts[0] })\n    } catch (e) {\n      this._child.current.refreshPage()\n      this.pullList()\n    }\n  }\n\n  loginRegister = async () => {\n    let payload = '{\"timestamp\": ' + new Date().getTime() + '}'\n    let signature = await this.state.web3.eth.personal.sign(payload, this.state.accounts[0])\n    console.log(signature)\n    let check = {\n      signature,\n      payload: btoa(payload)\n    }\n    // console.log(check)\n\n    // let url = process.env.NODE_HOST + ':' + process.env.NODE_PORT + '/api/v1/register'\n\n    let c = getCookie('challengetwotemplate.sid')\n    // console.log('c', c)\n    let url = 'http://localhost:3001/api/v1/register'\n    if (c) {\n      url = 'http://localhost:3001/api/v1/login'\n    }\n\n\n    if (document.cookie)\n      axios\n        .post(url, check\n        )\n        .then((response) => {\n          console.log('response', response)\n          if (response.status === 200) {\n            localStorage.setItem('logedIn', 'true')\n            this.setState({\n              isLogged: true\n            })\n          }\n        })\n\n\n    // this.setState({\n    //   tokenIn: 'DAI',\n    //   tokenOut: 'ETH',\n    //   isModal: true,\n    //   isLoginRegister: true\n    // })\n\n    // store.addNotification({\n    //   title: \"Wonderful!\",\n    //   message: \"teodosii@react-notifications-component\",\n    //   type: \"success\",\n    //   insert: \"top\",\n    //   container: \"bottom-right\",\n    //   animationIn: [\"animate__animated animate__fadeIn\"],\n    //   animationOut: [\"animate__animated animate__fadeOut\"],\n    //   dismiss: {\n    //     duration: 5000,\n    //     onScreen: true\n    //   }\n    // })\n\n    try {\n      // this.state.web3.eth.personal.sign('{\"timestamp\":  1627753792758}', this.state.accounts[0]).then(console.log)\n    } catch (e) {\n      console.log({ error: e })\n    }\n  }\n\n  logout = async () => {\n    let url = 'http://localhost:3001/api/v1/logout'\n    let axiosConfig = {\n      headers: {\n        \"Cookie\": document.cookie,\n        'Content-Type': 'application/json;charset=UTF-8',\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      withCredentials: true\n    }\n    axios\n      .post(url, null, axiosConfig)\n      .then((response) => {\n        console.log('response', response)\n        if (response.status === 200) {\n          localStorage.setItem('logedIn', 'false')\n          this.setState({\n            isLogged: false\n          })\n        }\n      })\n  }\n\n  // uniswapReturn = (data) => {\n  //   console.log(data)\n  // }\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    let modal, createCampaign\n    if (this.state.isModal) {\n      modal = <Modal closeModal={this.handleCloseModal} />;\n    }\n    if (this.state.isCreateCampaign) {\n      createCampaign = <CreateCampaign createCampaign={this.handleCreateCampaign} closeModal={this.handleCloseModal} tokens={this.state.tokens} />;\n    }\n\n    return (\n      <>\n        <ReactNotification />\n        {/* <ApolloProvider client={client}><Uniswap tokenIn={this.state.tokenIn} tokenOut={this.state.tokenOut} uniswapReturn={this.uniswapReturn} /></ApolloProvider> */}\n        <div className=\"App\">\n          {modal}\n          {createCampaign}\n          <Header handlePress={this.handlePress} loginRegister={this.loginRegister} logout={this.logout} isLogged={this.state.isLogged} />\n          <div className=\"content\">\n            <div className=\"list\">\n              {this.state.list.map((campaign, i) => {\n                return <Campaign campaign={campaign} index={i} key={i} donation={this.handleDonation} accounts={this.state.accounts} ref={this._child} removeCampaign={this.removeCampaign} tokens={this.state.tokens} />;\n              })}\n            </div>\n          </div>\n          <footer></footer>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}