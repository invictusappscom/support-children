{"version":3,"sources":["getWeb3.js","util.js","Header.js","Campaign.js","Modal.js","TokenSelector.js","CreateCampaign.js","uniswap.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","ethDisplay","price","getCookie","name","parts","document","cookie","split","length","pop","shift","Header","props","button","this","isLogged","localStorage","getItem","id","onClick","logout","handlePress","loginRegister","className","Component","Campaign","donationClick","setState","isDonationInProgress","donationFinish","state","ethAmount","donation","campaign","email","paymantInProgress","loaderText","ethAmountError","donationCancel","onInputchange","event","target","value","refreshPage","removingInProgress","removeCampaign","owner","accounts","indexOf","creatorAddress","progress","currentAmount","targetAmount","progressText","color","index","cover","image","reload","renderDonate","renderBody","input","size","flag","Math","round","description","substring","type","onChange","placeholder","active","parseInt","style","backgroundImage","backgroundColor","left","width","Modal","closeModal","TokenSelector","activToken","tokens","handleTokenClick","token","setToken","cssClass","map","i","CreateCampaign","beneficiaryAddress","errorName","errorEmail","errorTarget","errorBeneficiaryAddress","imageUrl","startDate","Date","saveCampaignHandle","error","createCampaign","setStartDate","date","selected","client","ApolloClient","link","HttpLink","uri","fetchOptions","mode","cache","InMemoryCache","DAI_QUERY","gql","ETH_PRICE_QUERY","Uniswap","useQuery","ethLoading","loading","ethPriceData","data","variables","tokenAddress","daiLoading","daiData","daiPriceInEth","derivedETH","daiTotalLiquidity","totalLiquidity","ethPriceInUSD","bundles","ethPrice","uniswapReturn","dai","eth","parseFloat","toFixed","App","storageValue","contract","list","isModal","isCreateCampaign","isLoginRegister","tokenIn","tokenOut","address","componentDidMount","_child","React","createRef","getAccounts","net","getId","networkId","deployedNetwork","SupportChildrenContract","networks","instance","Contract","abi","events","DonationMade","refreshList","CampaignFinished","CampaignCreated","pullList","alert","methods","getCampaigns","call","handleModalClick","handleCloseModal","handleCreateCampaign","utils","toWei","send","from","current","e","handleDonation","userData","donate","endCampaign","payload","getTime","personal","sign","signature","check","btoa","c","url","axios","post","then","response","status","setItem","axiosConfig","headers","withCredentials","modal","key","ref","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fec16baf.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nexport const getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable()\n          // Accounts now exposed\n          resolve(web3)\n        } catch (error) {\n          reject(error)\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\")\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\")\n        resolve(web3)\n      }\n    })\n  })","export const ethDisplay = (price) => {\n    price = price / 1000000000000000000\n    return price\n}\n\nexport const trimText = (input, size) => {\n    if (input.length > size) {\n        return input.substring(0, size) + '...';\n    }\n    return input;\n}\n\nexport const getCookie = (name) => {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n}","import React, { Component } from \"react\";\n\nimport \"./Header.css\";\nimport { ethDisplay, trimText } from './util'\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let button\n    if (this.props.isLogged || window.localStorage.getItem('logedIn') == 'true') {\n      button = <><div id=\"loginRegister\" onClick={this.props.logout}>Logout</div><div id=\"addCampaign\" onClick={this.props.handlePress}>Add Campaign</div></>\n    } else {\n      button = <div id=\"loginRegister\" onClick={this.props.loginRegister}>Login / Register</div>\n    }\n    return (\n      <header>\n        <div className=\"wrapper\">\n          <div className=\"logo\"></div>\n          {button}\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nimport \"./Campaign.css\";\nimport { ethDisplay, trimText } from './util'\n\nclass Campaign extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let colorArray = ['#00baa3', '#efc94c', '#d55342', '#2780ba']\n\n    // console.log(\"Campaign\", props.campaign)\n    // console.log(\"Accounts\", props.accounts)\n    let owner = false\n    if (props.accounts.indexOf(props.campaign.creatorAddress) !== -1) owner = true\n    // console.log(\"Index\", props.index)\n    let progress = (props.campaign.currentAmount / props.campaign.targetAmount) * 100\n    let progressText = progress\n    if (progress > 100) progress = 100\n    // console.log('progress', progress)\n    let color = colorArray[props.index % 4]\n    let cover = 'cause-' + this.props.index % 7 + '.jpg'\n    if (props.campaign.image) cover = props.campaign.image\n    this.state = {\n      reload: false,\n      ethAmount: 0,\n      ethAmountError: false,\n      email: '',\n      campaign: null,\n      progress: progress,\n      progressText: progressText,\n      color: color,\n      isDonationInProgress: false,\n      cover: cover,\n      paymantInProgress: false,\n      removingInProgress: false,\n      owner: owner,\n      loaderText: ''\n    }\n  }\n\n  donationClick = () => {\n    // this.props.donation(this.props.campaign)\n    this.setState({ isDonationInProgress: true })\n  }\n  donationFinish = () => {\n    if (this.state.ethAmount > 0) {\n      this.props.donation(this.props.campaign, {\n        email: this.state.email,\n        ethAmount: this.state.ethAmount\n      })\n      this.setState({\n        isDonationInProgress: false,\n        paymantInProgress: true,\n        loaderText: 'Paymant In Progress'\n      })\n    } else {\n      this.setState({\n        ethAmountError: true\n      })\n    }\n  }\n  donationCancel = () => {\n    this.setState({ isDonationInProgress: false })\n  }\n  onInputchange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n  refreshPage = () => {\n    this.setState(\n      {\n        paymantInProgress: false,\n        removingInProgress: false\n      }\n    )\n  }\n  removeCampaign = () => {\n    this.props.removeCampaign(this.props.campaign.id)\n    this.setState(\n      {\n        removingInProgress: true,\n        loaderText: 'Deactivate In Progress'\n      }\n    )\n  }\n  render() {\n    let progress = Math.round((this.props.campaign.currentAmount / this.props.campaign.targetAmount) * 100)\n    let progressText = progress\n    if (progress > 100) progress = 100\n\n    let renderDonate, renderBody\n    renderBody = <div className=\"campaignDescription\">{trimText(this.props.campaign.description, 100)}</div>\n    if (this.state.isDonationInProgress) {\n      renderBody = <div>\n        <strong>Donate: </strong>\n        <input type=\"number\" className={`donateInput ethValue ${this.state.ethAmountError ? \"error\" : \"\"}`}\n          name=\"ethAmount\"\n          value={this.state.ethAmount}\n          onChange={this.onInputchange}\n        />\n        <div className=\"eth\"></div>\n        <input type=\"text\" className=\"donateInput\"\n          placeholder=\"email\"\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onInputchange}\n        />\n      </div>\n      renderDonate = <div className=\"donateBtnWrapper\">\n        <div className=\"donateFinish\" onClick={this.donationFinish}>Send Donation</div>\n        <div className=\"donateCancel\" onClick={this.donationCancel}>Cancel</div>\n      </div>\n    } else if (this.props.campaign.active) {\n      renderDonate = <div className=\"donateBtn\" onClick={this.donationClick}>Donate Now</div>\n    }\n\n    if (this.props.campaign) {\n      let flag\n      if (parseInt(this.props.campaign.currentAmount) >= parseInt(this.props.campaign.targetAmount)) {\n        flag = <div className=\"finished\">Campaign Successful</div>\n      } else {\n        flag = <div className=\"finished\">Campaign Inactive</div>\n      }\n      return (\n        <div className=\"campaignWrapper\">\n          <div className={`campaign ${this.props.campaign.active ? \"active\" : \"inactive\"} ${this.state.removingInProgress ? \"loading\" : \"\"} ${this.state.paymantInProgress ? \"loading\" : \"\"} ${this.state.owner ? \"owner\" : \"\"} `}>\n            <div className=\"removeCampaing\" onClick={this.removeCampaign}></div>\n            {flag}\n            <div className=\"campaignPhoto\" style={{\n              backgroundImage: `url(\"${this.state.cover}\")`\n            }}\n              onClick={this.refreshPage}\n            >\n              <h2 className=\"campaignName\" style={{ backgroundColor: this.state.color }}>{this.props.campaign.name}</h2>\n            </div>\n            <div className=\"campaignBody\">\n              <div className=\"loader\"><span>{this.state.loaderText}</span></div>\n              {renderBody}\n              {renderDonate}\n              <div className=\"campaignGoalWrapper\"><div className=\"campaignGoalProgress\"><div className=\"campaignProgressText\" style={{ left: progress + \"%\", backgroundColor: this.state.color }} ><strong>{progressText}%</strong></div><div className=\"campaignProgress\" style={{ width: progress + '%', backgroundColor: this.state.color }}></div></div></div>\n              <div className=\"campaignRaised\"><strong>Raised:</strong> {ethDisplay(this.props.campaign.currentAmount)}<div className=\"eth\"></div></div>\n              <div className=\"campaignGoal\"><strong>Goal:</strong> {ethDisplay(this.props.campaign.targetAmount)}<div className=\"eth\"></div></div>\n            </div>\n\n          </div>\n        </div>\n      )\n    } else {\n      return (<div></div>)\n    }\n  }\n}\n\nexport default Campaign;\n","import React, { Component } from \"react\";\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  closeModal = () => {\n    this.props.closeModal()\n  }\n\n  render() {\n    return (\n      <div id=\"modalDim\" onClick={this.closeModal}></div>\n    )\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\n\nimport \"./TokenSelector.css\";\n\nclass TokenSelector extends Component {\n    state = {\n        activToken: this.props.tokens[0],\n    }\n    constructor(props) {\n        super(props)\n    }\n    handleTokenClick = (token) => {\n        // console.log('tokens:', data.name)\n        this.props.setToken(token)\n        this.setState({\n            activToken: token\n        })\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"selectField\">\n                    <div>{this.state.activToken.name}<div className={`tokenImg ${this.state.activToken.cssClass}`}></div></div>\n                    <ul>\n                        {this.props.tokens.map((token, i) => {\n                            return <li onClick={() => { this.handleTokenClick(token) }}>{token.name}<div className={`tokenImg ${token.cssClass}`}></div></li>\n                        })}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TokenSelector;\n","import React, { Component } from \"react\"\n\nimport \"./CreateCamapign.css\";\nimport TokenSelector from \"./TokenSelector\"\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nclass CreateCampaign extends Component {\n    state = {\n        name: '',\n        description: '',\n        email: '',\n        beneficiaryAddress: '',\n        targetAmount: 0,\n        errorName: false,\n        errorEmail: false,\n        errorTarget: false,\n        errorBeneficiaryAddress: false,\n        imageUrl: '',\n        token: this.props.tokens[0],\n        startDate: new Date(),\n    }\n    constructor(props) {\n        super(props)\n    }\n    onInputchange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    saveCampaignHandle = () => {\n        let error = false\n        if (this.state.name == '') {\n            this.setState({ errorName: true })\n            error = true\n        }\n        if (this.state.email == '') {\n            this.setState({ errorEmail: true })\n            error = true\n        }\n        if (this.state.targetAmount <= 0) {\n            this.setState({ errorTarget: true })\n            error = true\n        }\n        if (this.state.beneficiaryAddress == '') {\n            this.setState({ errorBeneficiaryAddress: true })\n            error = true\n        }\n        if (!error) {\n            this.props.createCampaign({\n                name: this.state.name,\n                email: this.state.email,\n                description: this.state.description,\n                targetAmount: this.state.targetAmount,\n                imageUrl: this.state.imageUrl,\n                beneficiaryAddress: this.state.beneficiaryAddress,\n            })\n        }\n    }\n    closeModal = () => {\n        this.props.closeModal()\n    }\n    setToken = (token) => {\n        console.log('Set Token', token)\n        this.setState({\n            token: token\n        })\n    }\n    setStartDate = (date) => {\n        this.setState({\n            startDate: date\n        })\n    }\n    render() {\n        return (\n            <div id=\"createCamapignWrapper\">\n                <div className=\"createCamapignBg\"></div>\n                <div className=\"createCamapignBody\">\n                    <h3>Create Campaign</h3>\n                    <div className=\"flexRow\">\n                        <div className=\"col6\">\n                            <input type=\"text\" placeholder=\"Campaign Name\" className={`${this.state.errorName ? \"error\" : \"\"}`}\n                                name=\"name\"\n                                value={this.state.name}\n                                onChange={this.onInputchange}\n                            />\n                        </div>\n                        <div className=\"col3 ethCell\">\n                            <input type=\"number\" placeholder=\"Target Amount\" className={`${this.state.errorTarget ? \"error\" : \"\"}`}\n                                name=\"targetAmount\"\n                                value={this.state.targetAmount}\n                                onChange={this.onInputchange}\n                            />\n                        </div>\n                        <div className=\"col3 ethCell\">\n                            <TokenSelector tokens={this.props.tokens} setToken={this.setToken} />\n                        </div>\n                    </div>\n                    <input type=\"text\" placeholder=\"Beneficiary Address\" className={`${this.state.errorBeneficiaryAddress ? \"error\" : \"\"}`}\n                        name=\"beneficiaryAddress\"\n                        value={this.state.beneficiaryAddress}\n                        onChange={this.onInputchange}\n                    />\n                    <textarea placeholder=\"Description\"\n                        name=\"description\"\n                        value={this.state.description}\n                        onChange={this.onInputchange}\n                    ></textarea>\n                    <input type=\"text\" placeholder=\"Email\" className={`${this.state.errorEmail ? \"error\" : \"\"}`}\n                        name=\"email\"\n                        value={this.state.email}\n                        onChange={this.onInputchange}\n                    />\n                    <div className=\"flexRow\">\n                        <div className=\"col6\">\n                            <input type=\"text\" placeholder=\"Image URL\"\n                                name=\"imageUrl\"\n                                value={this.state.imageUrl}\n                                onChange={this.onInputchange}\n                            />\n                        </div>\n                        <div className=\"col6\">\n                            <span>Valid till: </span>\n                            <DatePicker selected={this.state.startDate}\n                                onChange={(date) => this.setStartDate(date)}\n                            />\n                        </div>\n                    </div>\n                    <div id=\"createCampaignSave\" onClick={this.saveCampaignHandle}>Create Campaign</div>\n                    <div id=\"createCampaignCancel\" onClick={this.closeModal}>Cancel</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateCampaign;\n","import React, { useEffect } from 'react'\nimport { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\n// import uniswapLogo from '../uniswap-logo.png'\n// import daiLogo from '../dai-logo.png'\n\nexport const client = new ApolloClient({\n    link: new HttpLink({\n        uri: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2'\n    }),\n    fetchOptions: {\n        mode: 'no-cors'\n    },\n    cache: new InMemoryCache()\n})\n\nconst DAI_QUERY = gql`\n  query tokens($tokenAddress: Bytes!) {\n    tokens(where: { id: $tokenAddress }) {\n      derivedETH\n      totalLiquidity\n    }\n  }\n`\n\nconst ETH_PRICE_QUERY = gql`\n  query bundles {\n    bundles(where: { id: \"1\" }) {\n      ethPrice\n    }\n  }\n`\n\nfunction Uniswap(props) {\n    const { loading: ethLoading, data: ethPriceData } = useQuery(ETH_PRICE_QUERY)\n    const { loading: daiLoading, data: daiData } = useQuery(DAI_QUERY, {\n        variables: {\n            tokenAddress: '0x6b175474e89094c44da98b954eedeac495271d0f'\n        }\n    })\n\n    const daiPriceInEth = daiData && daiData.tokens[0].derivedETH\n    const daiTotalLiquidity = daiData && daiData.tokens[0].totalLiquidity\n    const ethPriceInUSD = ethPriceData && ethPriceData.bundles[0].ethPrice\n\n    if (daiPriceInEth && ethPriceInUSD) props.uniswapReturn({\n        dai: daiPriceInEth ,\n        eth: ethPriceInUSD\n    })\n\n    return (\n        <>\n            <h2>\n                Dai price:{' '}\n                {ethLoading || daiLoading\n                    ? 'Loading token data...'\n                    : '$' +\n                    // parse responses as floats and fix to 2 decimals\n                    (parseFloat(daiPriceInEth) * parseFloat(ethPriceInUSD)).toFixed(2)}\n            </h2>\n            <h2>\n                Dai total liquidity:{' '}\n                {daiLoading\n                    ? 'Loading token data...'\n                    : // display the total amount of DAI spread across all pools\n                    parseFloat(daiTotalLiquidity).toFixed(0)}\n            </h2>\n\n        </>\n    );\n}\n\nexport default Uniswap","import React, { Component } from \"react\";\nimport SupportChildrenContract from \"./contracts/SupportChildren.json\";\nimport { getWeb3 } from \"./getWeb3\";\n\nimport Header from \"./Header\";\nimport Campaign from \"./Campaign\";\nimport Modal from \"./Modal\";\nimport CreateCampaign from \"./CreateCampaign\";\n\nimport { getCookie } from './util'\n\nimport { ApolloProvider } from 'react-apollo'\n\nimport ReactNotification from 'react-notifications-component'\nimport { store } from 'react-notifications-component';\n\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'animate.css/animate.min.css'\nimport 'react-notifications-component/dist/theme.css'\n\nimport Uniswap from './uniswap';\nimport { client } from './uniswap'\n\nimport axios from \"axios\"\n\nclass App extends Component {\n  state = {\n    storageValue: 0,\n    web3: null,\n    accounts: null,\n    contract: null,\n    list: [],\n    isModal: false,\n    isCreateCampaign: false,\n    isLoginRegister: false,\n    tokenIn: null,\n    tokenOut: null,\n    isLogged: false,\n    tokens: [\n      {\n        name: 'ETH',\n        address: '',\n        cssClass: 'tokenEth'\n      },\n      {\n        name: 'DAI',\n        address: '',\n        cssClass: 'tokenDai'\n      },\n      {\n        name: 'CEL',\n        address: '',\n        cssClass: 'tokenCel'\n      },\n      {\n        name: 'OMG',\n        address: '',\n        cssClass: 'tokenOmg'\n      },\n    ]\n\n  };\n  componentDidMount = async () => {\n    this._child = React.createRef();\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SupportChildrenContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SupportChildrenContract.abi,\n        deployedNetwork && deployedNetwork.address\n      )\n\n      instance.events.DonationMade({}, async (error, data) => {\n        // console.log('DonationMade')\n        if (error) {\n          return console.log('Error: ' + error)\n        }\n        this.refreshList()\n      })\n\n      instance.events.CampaignFinished({}, async (error, data) => {\n        // console.log('CampaignFinished')\n        if (error) {\n          return console.log('Error: ' + error)\n        }\n        this.refreshList()\n      })\n\n      instance.events.CampaignCreated({}, async (error, data) => {\n        // console.log('CampaignCreated')\n        this.refreshList()\n      })\n\n\n      this.setState({ web3, accounts, contract: instance }, this.pullList);\n\n\n      // console.log(instance);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  pullList = async () => {\n    const { accounts, contract } = this.state;\n    let list = await contract.methods.getCampaigns().call()\n    // console.log(list)\n\n    this.setState({\n      list: list\n    })\n  }\n\n  handlePress = async () => {\n    this.setState({\n      isModal: true,\n      isCreateCampaign: true\n    })\n  }\n  handleModalClick = () => {\n    this.handleCloseModal()\n  }\n  handleCreateCampaign = async (data) => {\n    const { accounts, contract } = this.state;\n    // console.log('Create campaign', data)\n    this.handleCloseModal()\n    try {\n      await contract.methods.createCampaign(data.name, data.description, data.email, data.imageUrl, data.startDate, 2, this.state.web3.utils.toWei(data.targetAmount, 'ether'), data.beneficiaryAddress).send({ from: accounts[0] })\n    } catch (e) {\n      this.refreshList()\n    }\n  }\n  handleCloseModal = () => {\n    this.setState({\n      isModal: false,\n      isCreateCampaign: false\n    })\n  }\n  refreshList = () => {\n    try {\n      this._child.current.refreshPage()\n      this.pullList()\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  handleDonation = async (data, userData) => {\n    const { accounts, contract } = this.state;\n    // console.log('Donation', data, userData)\n    // data.beneficiaryAddress\n    try {\n      await contract.methods.donate(data.id, userData.email).send({ from: accounts[0], value: this.state.web3.utils.toWei(userData.ethAmount, 'ether') })\n    } catch (e) {\n      this._child.current.refreshPage()\n      this.pullList()\n    }\n  }\n  removeCampaign = async (id) => {\n    // console.log('removeCampaign', id)\n    const { accounts, contract } = this.state;\n    try {\n      await contract.methods.endCampaign(id).send({ from: accounts[0] })\n    } catch (e) {\n      this._child.current.refreshPage()\n      this.pullList()\n    }\n  }\n\n  loginRegister = async () => {\n    let payload = '{\"timestamp\": ' + new Date().getTime() + '}'\n    let signature = await this.state.web3.eth.personal.sign(payload, this.state.accounts[0])\n    console.log(signature)\n    let check = {\n      signature,\n      payload: btoa(payload)\n    }\n    // console.log(check)\n\n    // let url = process.env.NODE_HOST + ':' + process.env.NODE_PORT + '/api/v1/register'\n\n    let c = getCookie('challengetwotemplate.sid')\n    // console.log('c', c)\n    let url = 'http://localhost:3001/api/v1/register'\n    if (c) {\n      url = 'http://localhost:3001/api/v1/login'\n    }\n\n    \n    if (document.cookie)\n    axios\n      .post(url, check\n      )\n      .then((response) => {\n        console.log('response', response)\n        if (response.status === 200) {\n          localStorage.setItem('logedIn', 'true')\n          this.setState({\n            isLogged: true\n          })\n        }\n      })\n\n\n    // this.setState({\n    //   tokenIn: 'DAI',\n    //   tokenOut: 'ETH',\n    //   isModal: true,\n    //   isLoginRegister: true\n    // })\n\n    // store.addNotification({\n    //   title: \"Wonderful!\",\n    //   message: \"teodosii@react-notifications-component\",\n    //   type: \"success\",\n    //   insert: \"top\",\n    //   container: \"bottom-right\",\n    //   animationIn: [\"animate__animated animate__fadeIn\"],\n    //   animationOut: [\"animate__animated animate__fadeOut\"],\n    //   dismiss: {\n    //     duration: 5000,\n    //     onScreen: true\n    //   }\n    // })\n\n    try {\n      // this.state.web3.eth.personal.sign('{\"timestamp\":  1627753792758}', this.state.accounts[0]).then(console.log)\n    } catch (e) {\n      console.log({ error: e })\n    }\n  }\n\n  logout = async () => {\n    let url = 'http://localhost:3001/api/v1/logout'\n    let axiosConfig = {\n      headers: {\n        \"Cookie\": document.cookie,\n        'Content-Type': 'application/json;charset=UTF-8',\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      withCredentials: true\n    }\n    axios\n      .post(url, null, axiosConfig)\n      .then((response) => {\n        console.log('response', response)\n        if (response.status === 200) {\n          localStorage.setItem('logedIn', 'false')\n          this.setState({\n            isLogged: false\n          })\n        }\n      })\n  }\n\n  uniswapReturn = (data) => {\n    console.log(data)\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    let modal, createCampaign\n    if (this.state.isModal) {\n      modal = <Modal closeModal={this.handleCloseModal} />;\n    }\n    if (this.state.isCreateCampaign) {\n      createCampaign = <CreateCampaign createCampaign={this.handleCreateCampaign} closeModal={this.handleCloseModal} tokens={this.state.tokens} />;\n    }\n    return (\n      <>\n        <ReactNotification />\n        <ApolloProvider client={client}><Uniswap tokenIn={this.state.tokenIn} tokenOut={this.state.tokenOut} uniswapReturn={this.uniswapReturn} /></ApolloProvider>\n        <div className=\"App\">\n          {modal}\n          {createCampaign}\n          <Header handlePress={this.handlePress} loginRegister={this.loginRegister} logout={this.logout} isLogged={this.state.isLogged} />\n          <div className=\"content\">\n            <div className=\"list\">\n              {this.state.list.map((campaign, i) => {\n                return <Campaign campaign={campaign} index={i} key={i} donation={this.handleDonation} accounts={this.state.accounts} ref={this._child} removeCampaign={this.removeCampaign} />;\n              })}\n            </div>\n          </div>\n          <footer></footer>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}